<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<!--
BBEdit Language Module for CoffeeScript

Based on:
  pmuellr   - https://gist.github.com/pmuellr/1004413
  evandavis - https://gist.github.com/evandavis/3219871

Copyright (C) 2014 Andrew Carter
-->
<plist version="1.0">
  <dict>
    <key>BBEditDocumentType</key>
    <string>CodelessLanguageModule</string>
    <key>BBLMLanguageDisplayName</key>
    <string>CoffeeScript</string>
    <key>BBLMLanguageCode</key>
    <string>CoSc</string>
    <key>BBLMColorsSyntax</key>
    <true/>
    <key>BBLMScansFunctions</key>
    <true/>
    <key>BBLMFunctionScannerDoesFoldsToo</key>
    <true/>
    <key>BBLMFiltersRunsForSpellChecking</key>
    <true/>
    <key>BBLMIsCaseSensitive</key>
    <true/>
    <key>BBLMSupportsTextCompletion</key>
    <true/>
    <key>BBLMSuffixMap</key>
    <array>
      <dict>
        <key>BBLMLanguageSuffix</key>
        <string>.cs</string>
      </dict>
      <dict>
        <key>BBLMLanguageSuffix</key>
        <string>.coffee</string>
      </dict>
    </array>
    <key>BBLMPreferredFilenameExtension</key>
    <string>coffee</string>
    <key>BBLMReferenceSearchURLTemplate</key>
    <string>http://www.coffeescript.org?__SYMBOLNAME__</string>
    <key>BBLMKeywordList</key>
    <array>
      <string><![CDATA[->]]></string>
      <string><![CDATA[=>]]></string>
      <string>and</string>
      <string>catch</string>
      <string>class</string>
      <string>do</string>
      <string>else</string>
      <string>extends</string>
      <string>finally</string>
      <string>for</string>
      <string>if</string>
      <string>in</string>
      <string>is</string>
      <string>isnt</string>
      <string>new</string>
      <string>not</string>
      <string>of</string>
      <string>or</string>
      <string>return</string>
      <string>super</string>
      <string>switch</string>
      <string>then</string>
      <string>this</string>
      <string>try</string>
      <string>typeof</string>
      <string>unless</string>
      <string>until</string>
      <string>when</string>
      <string>while</string>
    </array>
    <key>BBLMPredefinedNameList</key>
    <array>
      <string>false</string>
      <string>no</string>
      <string>null</string>
      <string>true</string>
      <string>yes</string>
    </array>
    <key>BBLMCommentLineDefault</key>
    <string># </string>
    <key>Language Features</key>
    <dict>
      <key>Identifier and Keyword Character Class</key>
      <string><![CDATA[0-9A-Z_a-z\=\-\>\?]]></string>

      <key>Comment Pattern</key>
      <string><![CDATA[
        (?x:
            (?s:\#\#\#.*?\#\#\#) |
            (?> \#.*$)
        )]]>
      </string>

      <key>String Pattern</key>
      <string><![CDATA[
        (?x:
            ((?s:
              (?P<multistrstart>(?:"""|'''|(\/\/\/)|`)).*?(?<!\\)(?P=multistrstart)
            ) |
            (?:
              (?P<strstart>(?:"|'|(\/))).*?(?<!\\)(?P=strstart)
            ))
            (?# if backreferences 4 or 5 are set then the string was a regex)
            (?# match the optional regex options at the end)
            (?(4)[a-zA-Z]*)
            (?(5)[a-zA-Z]*)
        )]]>
      </string>

      <key>Skip Pattern</key>
      <string><![CDATA[
        (?x:
          (?P>comment) |
          (?P>string)
        )]]>
      </string>

      <!--
        Functions are defined by: <function_name> (:|=) (<string>) (-|=)>
      -->
      <key>Function Pattern</key>
      <string><![CDATA[
        (?x:
            (?P<leadspace>^[\t ]*)
            (?P<function>
              (?P<function_name>
                [a-zA-Z0-9_-]+
              )

              (?# Prototype assignment)
              (?: [\:]{2} [a-zA-Z0-9_-]* )?

              (?# Equals sign or colon with optional spaces around it)
              [ \t]* (?:(\=|\:)) [ \t]*

              (?# optional parameters, followed by optional spaces or tabs)
              (?:\(.*?\)[ \t]*)?

              (?# Regular or fat arrow, optional space)
              (?:(\=|\-))\>[ \t]*

              (?# One-line functions are OK)
              .*$

              (?# Function body)
              (?:
                (?:
                  (?: \r(?P=leadspace)[ \t]+(?:.+)) |
                  (?: \s*$)
                )
              )*
            )
        )]]>
      </string>
    </dict>
  </dict>
</plist>
